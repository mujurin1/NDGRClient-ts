// @generated by protoc-gen-es v2.0.0 with parameter "target=ts"
// @generated from file dwango/nicolive/chat/data/atoms.proto (package dwango.nicolive.chat.data, syntax proto3)
/* eslint-disable */

import type { GenEnum, GenFile, GenMessage } from "@bufbuild/protobuf/codegenv1";
import { enumDesc, fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv1";
import type { Duration } from "@bufbuild/protobuf/wkt";
import { file_google_protobuf_duration } from "@bufbuild/protobuf/wkt";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file dwango/nicolive/chat/data/atoms.proto.
 */
export const file_dwango_nicolive_chat_data_atoms: GenFile = /*@__PURE__*/
  fileDesc("CiVkd2FuZ28vbmljb2xpdmUvY2hhdC9kYXRhL2F0b21zLnByb3RvEhlkd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhIrwJCgRDaGF0Eg8KB2NvbnRlbnQYASABKAkSDAoEdnBvcxgDIAEoBRJFCg5hY2NvdW50X3N0YXR1cxgEIAEoDjItLmR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEuQ2hhdC5BY2NvdW50U3RhdHVzEhEKBG5hbWUYAiABKAlIAIgBARIYCgtyYXdfdXNlcl9pZBgFIAEoA0gBiAEBEhsKDmhhc2hlZF91c2VyX2lkGAYgASgJSAKIAQESOgoIbW9kaWZpZXIYByABKAsyKC5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLkNoYXQuTW9kaWZpZXISCgoCbm8YCCABKAUa4wYKCE1vZGlmaWVyEj4KCHBvc2l0aW9uGAEgASgOMiwuZHdhbmdvLm5pY29saXZlLmNoYXQuZGF0YS5DaGF0Lk1vZGlmaWVyLlBvcxI7CgRzaXplGAIgASgOMi0uZHdhbmdvLm5pY29saXZlLmNoYXQuZGF0YS5DaGF0Lk1vZGlmaWVyLlNpemUSSQoLbmFtZWRfY29sb3IYAyABKA4yMi5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLkNoYXQuTW9kaWZpZXIuQ29sb3JOYW1lSAASSAoKZnVsbF9jb2xvchgEIAEoCzIyLmR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEuQ2hhdC5Nb2RpZmllci5GdWxsQ29sb3JIABI7CgRmb250GAUgASgOMi0uZHdhbmdvLm5pY29saXZlLmNoYXQuZGF0YS5DaGF0Lk1vZGlmaWVyLkZvbnQSQQoHb3BhY2l0eRgGIAEoDjIwLmR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEuQ2hhdC5Nb2RpZmllci5PcGFjaXR5GiwKCUZ1bGxDb2xvchIJCgFyGAEgASgFEgkKAWcYAiABKAUSCQoBYhgDIAEoBSIiCgNQb3MSCAoEbmFrYRAAEgkKBXNoaXRhEAESBgoCdWUQAiImCgRTaXplEgoKBm1lZGl1bRAAEgkKBXNtYWxsEAESBwoDYmlnEAIi7QEKCUNvbG9yTmFtZRIJCgV3aGl0ZRAAEgcKA3JlZBABEggKBHBpbmsQAhIKCgZvcmFuZ2UQAxIKCgZ5ZWxsb3cQBBIJCgVncmVlbhAFEggKBGN5YW4QBhIICgRibHVlEAcSCgoGcHVycGxlEAgSCQoFYmxhY2sQCRIKCgZ3aGl0ZTIQChIICgRyZWQyEAsSCQoFcGluazIQDBILCgdvcmFuZ2UyEA0SCwoHeWVsbG93MhAOEgoKBmdyZWVuMhAPEgkKBWN5YW4yEBASCQoFYmx1ZTIQERILCgdwdXJwbGUyEBISCgoGYmxhY2syEBMiKgoERm9udBIKCgZkZWZvbnQQABIKCgZtaW5jaG8QARIKCgZnb3RoaWMQAiImCgdPcGFjaXR5EgoKBk5vcm1hbBAAEg8KC1RyYW5zbHVjZW50EAFCBwoFY29sb3IiKgoNQWNjb3VudFN0YXR1cxIMCghTdGFuZGFyZBAAEgsKB1ByZW1pdW0QAUIHCgVfbmFtZUIOCgxfcmF3X3VzZXJfaWRCEQoPX2hhc2hlZF91c2VyX2lkIpYBCg9PcGVyYXRvckNvbW1lbnQSDwoHY29udGVudBgBIAEoCRIRCgRuYW1lGAIgASgJSACIAQESOgoIbW9kaWZpZXIYAyABKAsyKC5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLkNoYXQuTW9kaWZpZXISEQoEbGluaxgEIAEoCUgBiAEBQgcKBV9uYW1lQgcKBV9saW5rIlEKBEp1bXASDwoHY29udGVudBgBIAEoCRIPCgdtZXNzYWdlGAIgASgJEicKBHdhaXQYBCABKAsyGS5nb29nbGUucHJvdG9idWYuRHVyYXRpb24iUQoIUmVkaXJlY3QSCwoDdXJpGAEgASgJEg8KB21lc3NhZ2UYAiABKAkSJwoEd2FpdBgEIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbiLHAQoSU2ltcGxlTm90aWZpY2F0aW9uEhAKBmljaGliYRgBIAEoCUgAEg8KBXF1b3RlGAIgASgJSAASEQoHZW1vdGlvbhgDIAEoCUgAEhAKBmNydWlzZRgEIAEoCUgAEhoKEHByb2dyYW1fZXh0ZW5kZWQYBSABKAlIABIUCgpyYW5raW5nX2luGAYgASgJSAASGQoPcmFua2luZ191cGRhdGVkGAggASgJSAASEQoHdmlzaXRlZBgHIAEoCUgAQgkKB21lc3NhZ2Ui0QEKBEdpZnQSDwoHaXRlbV9pZBgBIAEoCRIfChJhZHZlcnRpc2VyX3VzZXJfaWQYAiABKANIAIgBARIXCg9hZHZlcnRpc2VyX25hbWUYAyABKAkSDQoFcG9pbnQYBCABKAMSDwoHbWVzc2FnZRgFIAEoCRIRCglpdGVtX25hbWUYBiABKAkSHgoRY29udHJpYnV0aW9uX3JhbmsYByABKAVIAYgBAUIVChNfYWR2ZXJ0aXNlcl91c2VyX2lkQhQKEl9jb250cmlidXRpb25fcmFuayKHBAoGTmljb2FkEjIKAnYwGAEgASgLMiQuZHdhbmdvLm5pY29saXZlLmNoYXQuZGF0YS5OaWNvYWQuVjBIABIyCgJ2MRgCIAEoCzIkLmR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEuTmljb2FkLlYxSAAa2QIKAlYwEjsKBmxhdGVzdBgBIAEoCzIrLmR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEuTmljb2FkLlYwLkxhdGVzdBI9CgdyYW5raW5nGAIgAygLMiwuZHdhbmdvLm5pY29saXZlLmNoYXQuZGF0YS5OaWNvYWQuVjAuUmFua2luZxITCgt0b3RhbF9wb2ludBgDIAEoBRpNCgZMYXRlc3QSEgoKYWR2ZXJ0aXNlchgBIAEoCRINCgVwb2ludBgCIAEoBRIUCgdtZXNzYWdlGAMgASgJSACIAQFCCgoIX21lc3NhZ2UacwoHUmFua2luZxISCgphZHZlcnRpc2VyGAEgASgJEgwKBHJhbmsYAiABKAUSFAoHbWVzc2FnZRgDIAEoCUgAiAEBEhYKCXVzZXJfcmFuaxgEIAEoBUgBiAEBQgoKCF9tZXNzYWdlQgwKCl91c2VyX3JhbmsaLQoCVjESFgoOdG90YWxfYWRfcG9pbnQYASABKAUSDwoHbWVzc2FnZRgCIAEoCUIKCgh2ZXJzaW9ucyJ0CgtDb21tZW50TG9jaxI9CgZzdGF0dXMYASABKA4yLS5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLkNvbW1lbnRMb2NrLlN0YXR1cyImCgZTdGF0dXMSEAoMVW5yZXN0cmljdGVkEAASCgoGTG9ja2VkEAEigAEKC0NvbW1lbnRNb2RlEj0KBmxheW91dBgBIAEoDjItLmR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEuQ29tbWVudE1vZGUuTGF5b3V0IjIKBkxheW91dBIKCgZOb3JtYWwQABIMCghTcGxpdFRvcBABEg4KCkJhY2tncm91bmQQAiIMCgpHYW1lVXBkYXRlIuQBCgpUcmlhbFBhbmVsEjoKBXBhbmVsGAEgASgOMisuZHdhbmdvLm5pY29saXZlLmNoYXQuZGF0YS5UcmlhbFBhbmVsLlBhbmVsEkQKEHVucXVhbGlmaWVkX3VzZXIYAiABKA4yKi5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLlRyaWFsUGFuZWwuTW9kZSIgCgVQYW5lbBIKCgZIaWRkZW4QABILCgdEaXNwbGF5EAEiMgoETW9kZRILCgdBbGxvd2VkEAASDgoKUmVzdHJpY3RlZBABEg0KCUZvcmJpZGRlbhACIm8KDVByb2dyYW1TdGF0dXMSPQoFc3RhdGUYASABKA4yLi5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLlByb2dyYW1TdGF0dXMuU3RhdGUiHwoFU3RhdGUSCwoHVW5rbm93bhAAEgkKBUVuZGVkEAEiqQEKClRhZ1VwZGF0ZWQSNwoEdGFncxgBIAMoCzIpLmR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEuVGFnVXBkYXRlZC5UYWcSFAoMb3duZXJfbG9ja2VkGAIgASgIGkwKA1RhZxIMCgR0ZXh0GAEgASgJEg4KBmxvY2tlZBgCIAEoCBIQCghyZXNlcnZlZBgDIAEoCBIVCg1uaWNvcGVkaWFfdXJpGAQgASgJIqgBCgpTdGF0aXN0aWNzEhQKB3ZpZXdlcnMYASABKANIAIgBARIVCghjb21tZW50cxgCIAEoA0gBiAEBEhYKCWFkX3BvaW50cxgDIAEoA0gCiAEBEhgKC2dpZnRfcG9pbnRzGAQgASgDSAOIAQFCCgoIX3ZpZXdlcnNCCwoJX2NvbW1lbnRzQgwKCl9hZF9wb2ludHNCDgoMX2dpZnRfcG9pbnRzSgQIBRAGIugBCgdNYXJxdWVlEkAKB2Rpc3BsYXkYASABKAsyKi5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLk1hcnF1ZWUuRGlzcGxheUgAiAEBGo4BCgdEaXNwbGF5EkQKEG9wZXJhdG9yX2NvbW1lbnQYASABKAsyKi5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLk9wZXJhdG9yQ29tbWVudBIwCghkdXJhdGlvbhgDIAEoCzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkgAiAEBQgsKCV9kdXJhdGlvbkIKCghfZGlzcGxheSKDAgoHRW5xdWV0ZRIQCghxdWVzdGlvbhgBIAEoCRI6CgdjaG9pY2VzGAIgAygLMikuZHdhbmdvLm5pY29saXZlLmNoYXQuZGF0YS5FbnF1ZXRlLkNob2ljZRI5CgZzdGF0dXMYAyABKA4yKS5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLkVucXVldGUuU3RhdHVzGkMKBkNob2ljZRITCgtkZXNjcmlwdGlvbhgBIAEoCRIWCglwZXJfbWlsbGUYAyABKAVIAIgBAUIMCgpfcGVyX21pbGxlIioKBlN0YXR1cxIKCgZDbG9zZWQQABIICgRQb2xsEAESCgoGUmVzdWx0EAIiewoJTW92ZU9yZGVyEi8KBGp1bXAYASABKAsyHy5kd2FuZ28ubmljb2xpdmUuY2hhdC5kYXRhLkp1bXBIABI3CghyZWRpcmVjdBgCIAEoCzIjLmR3YW5nby5uaWNvbGl2ZS5jaGF0LmRhdGEuUmVkaXJlY3RIAEIECgJ0b2IGcHJvdG8z", [file_google_protobuf_duration]);

/**
 * @generated from message dwango.nicolive.chat.data.Chat
 */
export type Chat = Message<"dwango.nicolive.chat.data.Chat"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;

  /**
   * @generated from field: int32 vpos = 3;
   */
  vpos: number;

  /**
   * @generated from field: dwango.nicolive.chat.data.Chat.AccountStatus account_status = 4;
   */
  accountStatus: Chat_AccountStatus;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: optional int64 raw_user_id = 5;
   */
  rawUserId?: bigint;

  /**
   * @generated from field: optional string hashed_user_id = 6;
   */
  hashedUserId?: string;

  /**
   * @generated from field: dwango.nicolive.chat.data.Chat.Modifier modifier = 7;
   */
  modifier?: Chat_Modifier;

  /**
   * @generated from field: int32 no = 8;
   */
  no: number;
};

/**
 * Describes the message dwango.nicolive.chat.data.Chat.
 * Use `create(ChatSchema)` to create a new message.
 */
export const ChatSchema: GenMessage<Chat> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 0);

/**
 * @generated from message dwango.nicolive.chat.data.Chat.Modifier
 */
export type Chat_Modifier = Message<"dwango.nicolive.chat.data.Chat.Modifier"> & {
  /**
   * @generated from field: dwango.nicolive.chat.data.Chat.Modifier.Pos position = 1;
   */
  position: Chat_Modifier_Pos;

  /**
   * @generated from field: dwango.nicolive.chat.data.Chat.Modifier.Size size = 2;
   */
  size: Chat_Modifier_Size;

  /**
   * @generated from oneof dwango.nicolive.chat.data.Chat.Modifier.color
   */
  color: {
    /**
     * @generated from field: dwango.nicolive.chat.data.Chat.Modifier.ColorName named_color = 3;
     */
    value: Chat_Modifier_ColorName;
    case: "namedColor";
  } | {
    /**
     * @generated from field: dwango.nicolive.chat.data.Chat.Modifier.FullColor full_color = 4;
     */
    value: Chat_Modifier_FullColor;
    case: "fullColor";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: dwango.nicolive.chat.data.Chat.Modifier.Font font = 5;
   */
  font: Chat_Modifier_Font;

  /**
   * @generated from field: dwango.nicolive.chat.data.Chat.Modifier.Opacity opacity = 6;
   */
  opacity: Chat_Modifier_Opacity;
};

/**
 * Describes the message dwango.nicolive.chat.data.Chat.Modifier.
 * Use `create(Chat_ModifierSchema)` to create a new message.
 */
export const Chat_ModifierSchema: GenMessage<Chat_Modifier> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 0, 0);

/**
 * @generated from message dwango.nicolive.chat.data.Chat.Modifier.FullColor
 */
export type Chat_Modifier_FullColor = Message<"dwango.nicolive.chat.data.Chat.Modifier.FullColor"> & {
  /**
   * @generated from field: int32 r = 1;
   */
  r: number;

  /**
   * @generated from field: int32 g = 2;
   */
  g: number;

  /**
   * @generated from field: int32 b = 3;
   */
  b: number;
};

/**
 * Describes the message dwango.nicolive.chat.data.Chat.Modifier.FullColor.
 * Use `create(Chat_Modifier_FullColorSchema)` to create a new message.
 */
export const Chat_Modifier_FullColorSchema: GenMessage<Chat_Modifier_FullColor> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 0, 0, 0);

/**
 * @generated from enum dwango.nicolive.chat.data.Chat.Modifier.Pos
 */
export enum Chat_Modifier_Pos {
  /**
   * @generated from enum value: naka = 0;
   */
  naka = 0,

  /**
   * @generated from enum value: shita = 1;
   */
  shita = 1,

  /**
   * @generated from enum value: ue = 2;
   */
  ue = 2,
}

/**
 * Describes the enum dwango.nicolive.chat.data.Chat.Modifier.Pos.
 */
export const Chat_Modifier_PosSchema: GenEnum<Chat_Modifier_Pos> = /*@__PURE__*/
  enumDesc(file_dwango_nicolive_chat_data_atoms, 0, 0, 0);

/**
 * @generated from enum dwango.nicolive.chat.data.Chat.Modifier.Size
 */
export enum Chat_Modifier_Size {
  /**
   * @generated from enum value: medium = 0;
   */
  medium = 0,

  /**
   * @generated from enum value: small = 1;
   */
  small = 1,

  /**
   * @generated from enum value: big = 2;
   */
  big = 2,
}

/**
 * Describes the enum dwango.nicolive.chat.data.Chat.Modifier.Size.
 */
export const Chat_Modifier_SizeSchema: GenEnum<Chat_Modifier_Size> = /*@__PURE__*/
  enumDesc(file_dwango_nicolive_chat_data_atoms, 0, 0, 1);

/**
 * @generated from enum dwango.nicolive.chat.data.Chat.Modifier.ColorName
 */
export enum Chat_Modifier_ColorName {
  /**
   * @generated from enum value: white = 0;
   */
  white = 0,

  /**
   * @generated from enum value: red = 1;
   */
  red = 1,

  /**
   * @generated from enum value: pink = 2;
   */
  pink = 2,

  /**
   * @generated from enum value: orange = 3;
   */
  orange = 3,

  /**
   * @generated from enum value: yellow = 4;
   */
  yellow = 4,

  /**
   * @generated from enum value: green = 5;
   */
  green = 5,

  /**
   * @generated from enum value: cyan = 6;
   */
  cyan = 6,

  /**
   * @generated from enum value: blue = 7;
   */
  blue = 7,

  /**
   * @generated from enum value: purple = 8;
   */
  purple = 8,

  /**
   * @generated from enum value: black = 9;
   */
  black = 9,

  /**
   * @generated from enum value: white2 = 10;
   */
  white2 = 10,

  /**
   * @generated from enum value: red2 = 11;
   */
  red2 = 11,

  /**
   * @generated from enum value: pink2 = 12;
   */
  pink2 = 12,

  /**
   * @generated from enum value: orange2 = 13;
   */
  orange2 = 13,

  /**
   * @generated from enum value: yellow2 = 14;
   */
  yellow2 = 14,

  /**
   * @generated from enum value: green2 = 15;
   */
  green2 = 15,

  /**
   * @generated from enum value: cyan2 = 16;
   */
  cyan2 = 16,

  /**
   * @generated from enum value: blue2 = 17;
   */
  blue2 = 17,

  /**
   * @generated from enum value: purple2 = 18;
   */
  purple2 = 18,

  /**
   * @generated from enum value: black2 = 19;
   */
  black2 = 19,
}

/**
 * Describes the enum dwango.nicolive.chat.data.Chat.Modifier.ColorName.
 */
export const Chat_Modifier_ColorNameSchema: GenEnum<Chat_Modifier_ColorName> = /*@__PURE__*/
  enumDesc(file_dwango_nicolive_chat_data_atoms, 0, 0, 2);

/**
 * @generated from enum dwango.nicolive.chat.data.Chat.Modifier.Font
 */
export enum Chat_Modifier_Font {
  /**
   * @generated from enum value: defont = 0;
   */
  defont = 0,

  /**
   * @generated from enum value: mincho = 1;
   */
  mincho = 1,

  /**
   * @generated from enum value: gothic = 2;
   */
  gothic = 2,
}

/**
 * Describes the enum dwango.nicolive.chat.data.Chat.Modifier.Font.
 */
export const Chat_Modifier_FontSchema: GenEnum<Chat_Modifier_Font> = /*@__PURE__*/
  enumDesc(file_dwango_nicolive_chat_data_atoms, 0, 0, 3);

/**
 * @generated from enum dwango.nicolive.chat.data.Chat.Modifier.Opacity
 */
export enum Chat_Modifier_Opacity {
  /**
   * @generated from enum value: Normal = 0;
   */
  Normal = 0,

  /**
   * @generated from enum value: Translucent = 1;
   */
  Translucent = 1,
}

/**
 * Describes the enum dwango.nicolive.chat.data.Chat.Modifier.Opacity.
 */
export const Chat_Modifier_OpacitySchema: GenEnum<Chat_Modifier_Opacity> = /*@__PURE__*/
  enumDesc(file_dwango_nicolive_chat_data_atoms, 0, 0, 4);

/**
 * @generated from enum dwango.nicolive.chat.data.Chat.AccountStatus
 */
export enum Chat_AccountStatus {
  /**
   * @generated from enum value: Standard = 0;
   */
  Standard = 0,

  /**
   * @generated from enum value: Premium = 1;
   */
  Premium = 1,
}

/**
 * Describes the enum dwango.nicolive.chat.data.Chat.AccountStatus.
 */
export const Chat_AccountStatusSchema: GenEnum<Chat_AccountStatus> = /*@__PURE__*/
  enumDesc(file_dwango_nicolive_chat_data_atoms, 0, 0);

/**
 * @generated from message dwango.nicolive.chat.data.OperatorComment
 */
export type OperatorComment = Message<"dwango.nicolive.chat.data.OperatorComment"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;

  /**
   * @generated from field: optional string name = 2;
   */
  name?: string;

  /**
   * @generated from field: dwango.nicolive.chat.data.Chat.Modifier modifier = 3;
   */
  modifier?: Chat_Modifier;

  /**
   * @generated from field: optional string link = 4;
   */
  link?: string;
};

/**
 * Describes the message dwango.nicolive.chat.data.OperatorComment.
 * Use `create(OperatorCommentSchema)` to create a new message.
 */
export const OperatorCommentSchema: GenMessage<OperatorComment> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 1);

/**
 * @generated from message dwango.nicolive.chat.data.Jump
 */
export type Jump = Message<"dwango.nicolive.chat.data.Jump"> & {
  /**
   * @generated from field: string content = 1;
   */
  content: string;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: google.protobuf.Duration wait = 4;
   */
  wait?: Duration;
};

/**
 * Describes the message dwango.nicolive.chat.data.Jump.
 * Use `create(JumpSchema)` to create a new message.
 */
export const JumpSchema: GenMessage<Jump> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 2);

/**
 * @generated from message dwango.nicolive.chat.data.Redirect
 */
export type Redirect = Message<"dwango.nicolive.chat.data.Redirect"> & {
  /**
   * @generated from field: string uri = 1;
   */
  uri: string;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  /**
   * @generated from field: google.protobuf.Duration wait = 4;
   */
  wait?: Duration;
};

/**
 * Describes the message dwango.nicolive.chat.data.Redirect.
 * Use `create(RedirectSchema)` to create a new message.
 */
export const RedirectSchema: GenMessage<Redirect> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 3);

/**
 * @generated from message dwango.nicolive.chat.data.SimpleNotification
 */
export type SimpleNotification = Message<"dwango.nicolive.chat.data.SimpleNotification"> & {
  /**
   * @generated from oneof dwango.nicolive.chat.data.SimpleNotification.message
   */
  message: {
    /**
     * @generated from field: string ichiba = 1;
     */
    value: string;
    case: "ichiba";
  } | {
    /**
     * @generated from field: string quote = 2;
     */
    value: string;
    case: "quote";
  } | {
    /**
     * @generated from field: string emotion = 3;
     */
    value: string;
    case: "emotion";
  } | {
    /**
     * @generated from field: string cruise = 4;
     */
    value: string;
    case: "cruise";
  } | {
    /**
     * @generated from field: string program_extended = 5;
     */
    value: string;
    case: "programExtended";
  } | {
    /**
     * @generated from field: string ranking_in = 6;
     */
    value: string;
    case: "rankingIn";
  } | {
    /**
     * @generated from field: string ranking_updated = 8;
     */
    value: string;
    case: "rankingUpdated";
  } | {
    /**
     * @generated from field: string visited = 7;
     */
    value: string;
    case: "visited";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dwango.nicolive.chat.data.SimpleNotification.
 * Use `create(SimpleNotificationSchema)` to create a new message.
 */
export const SimpleNotificationSchema: GenMessage<SimpleNotification> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 4);

/**
 * @generated from message dwango.nicolive.chat.data.Gift
 */
export type Gift = Message<"dwango.nicolive.chat.data.Gift"> & {
  /**
   * @generated from field: string item_id = 1;
   */
  itemId: string;

  /**
   * @generated from field: optional int64 advertiser_user_id = 2;
   */
  advertiserUserId?: bigint;

  /**
   * @generated from field: string advertiser_name = 3;
   */
  advertiserName: string;

  /**
   * @generated from field: int64 point = 4;
   */
  point: bigint;

  /**
   * @generated from field: string message = 5;
   */
  message: string;

  /**
   * @generated from field: string item_name = 6;
   */
  itemName: string;

  /**
   * @generated from field: optional int32 contribution_rank = 7;
   */
  contributionRank?: number;
};

/**
 * Describes the message dwango.nicolive.chat.data.Gift.
 * Use `create(GiftSchema)` to create a new message.
 */
export const GiftSchema: GenMessage<Gift> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 5);

/**
 * @generated from message dwango.nicolive.chat.data.Nicoad
 */
export type Nicoad = Message<"dwango.nicolive.chat.data.Nicoad"> & {
  /**
   * @generated from oneof dwango.nicolive.chat.data.Nicoad.versions
   */
  versions: {
    /**
     * @generated from field: dwango.nicolive.chat.data.Nicoad.V0 v0 = 1;
     */
    value: Nicoad_V0;
    case: "v0";
  } | {
    /**
     * @generated from field: dwango.nicolive.chat.data.Nicoad.V1 v1 = 2;
     */
    value: Nicoad_V1;
    case: "v1";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dwango.nicolive.chat.data.Nicoad.
 * Use `create(NicoadSchema)` to create a new message.
 */
export const NicoadSchema: GenMessage<Nicoad> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 6);

/**
 * @generated from message dwango.nicolive.chat.data.Nicoad.V0
 */
export type Nicoad_V0 = Message<"dwango.nicolive.chat.data.Nicoad.V0"> & {
  /**
   * @generated from field: dwango.nicolive.chat.data.Nicoad.V0.Latest latest = 1;
   */
  latest?: Nicoad_V0_Latest;

  /**
   * @generated from field: repeated dwango.nicolive.chat.data.Nicoad.V0.Ranking ranking = 2;
   */
  ranking: Nicoad_V0_Ranking[];

  /**
   * @generated from field: int32 total_point = 3;
   */
  totalPoint: number;
};

/**
 * Describes the message dwango.nicolive.chat.data.Nicoad.V0.
 * Use `create(Nicoad_V0Schema)` to create a new message.
 */
export const Nicoad_V0Schema: GenMessage<Nicoad_V0> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 6, 0);

/**
 * @generated from message dwango.nicolive.chat.data.Nicoad.V0.Latest
 */
export type Nicoad_V0_Latest = Message<"dwango.nicolive.chat.data.Nicoad.V0.Latest"> & {
  /**
   * @generated from field: string advertiser = 1;
   */
  advertiser: string;

  /**
   * @generated from field: int32 point = 2;
   */
  point: number;

  /**
   * @generated from field: optional string message = 3;
   */
  message?: string;
};

/**
 * Describes the message dwango.nicolive.chat.data.Nicoad.V0.Latest.
 * Use `create(Nicoad_V0_LatestSchema)` to create a new message.
 */
export const Nicoad_V0_LatestSchema: GenMessage<Nicoad_V0_Latest> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 6, 0, 0);

/**
 * @generated from message dwango.nicolive.chat.data.Nicoad.V0.Ranking
 */
export type Nicoad_V0_Ranking = Message<"dwango.nicolive.chat.data.Nicoad.V0.Ranking"> & {
  /**
   * @generated from field: string advertiser = 1;
   */
  advertiser: string;

  /**
   * @generated from field: int32 rank = 2;
   */
  rank: number;

  /**
   * @generated from field: optional string message = 3;
   */
  message?: string;

  /**
   * @generated from field: optional int32 user_rank = 4;
   */
  userRank?: number;
};

/**
 * Describes the message dwango.nicolive.chat.data.Nicoad.V0.Ranking.
 * Use `create(Nicoad_V0_RankingSchema)` to create a new message.
 */
export const Nicoad_V0_RankingSchema: GenMessage<Nicoad_V0_Ranking> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 6, 0, 1);

/**
 * @generated from message dwango.nicolive.chat.data.Nicoad.V1
 */
export type Nicoad_V1 = Message<"dwango.nicolive.chat.data.Nicoad.V1"> & {
  /**
   * @generated from field: int32 total_ad_point = 1;
   */
  totalAdPoint: number;

  /**
   * @generated from field: string message = 2;
   */
  message: string;
};

/**
 * Describes the message dwango.nicolive.chat.data.Nicoad.V1.
 * Use `create(Nicoad_V1Schema)` to create a new message.
 */
export const Nicoad_V1Schema: GenMessage<Nicoad_V1> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 6, 1);

/**
 * @generated from message dwango.nicolive.chat.data.CommentLock
 */
export type CommentLock = Message<"dwango.nicolive.chat.data.CommentLock"> & {
  /**
   * @generated from field: dwango.nicolive.chat.data.CommentLock.Status status = 1;
   */
  status: CommentLock_Status;
};

/**
 * Describes the message dwango.nicolive.chat.data.CommentLock.
 * Use `create(CommentLockSchema)` to create a new message.
 */
export const CommentLockSchema: GenMessage<CommentLock> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 7);

/**
 * @generated from enum dwango.nicolive.chat.data.CommentLock.Status
 */
export enum CommentLock_Status {
  /**
   * @generated from enum value: Unrestricted = 0;
   */
  Unrestricted = 0,

  /**
   * @generated from enum value: Locked = 1;
   */
  Locked = 1,
}

/**
 * Describes the enum dwango.nicolive.chat.data.CommentLock.Status.
 */
export const CommentLock_StatusSchema: GenEnum<CommentLock_Status> = /*@__PURE__*/
  enumDesc(file_dwango_nicolive_chat_data_atoms, 7, 0);

/**
 * @generated from message dwango.nicolive.chat.data.CommentMode
 */
export type CommentMode = Message<"dwango.nicolive.chat.data.CommentMode"> & {
  /**
   * @generated from field: dwango.nicolive.chat.data.CommentMode.Layout layout = 1;
   */
  layout: CommentMode_Layout;
};

/**
 * Describes the message dwango.nicolive.chat.data.CommentMode.
 * Use `create(CommentModeSchema)` to create a new message.
 */
export const CommentModeSchema: GenMessage<CommentMode> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 8);

/**
 * @generated from enum dwango.nicolive.chat.data.CommentMode.Layout
 */
export enum CommentMode_Layout {
  /**
   * @generated from enum value: Normal = 0;
   */
  Normal = 0,

  /**
   * @generated from enum value: SplitTop = 1;
   */
  SplitTop = 1,

  /**
   * @generated from enum value: Background = 2;
   */
  Background = 2,
}

/**
 * Describes the enum dwango.nicolive.chat.data.CommentMode.Layout.
 */
export const CommentMode_LayoutSchema: GenEnum<CommentMode_Layout> = /*@__PURE__*/
  enumDesc(file_dwango_nicolive_chat_data_atoms, 8, 0);

/**
 * @generated from message dwango.nicolive.chat.data.GameUpdate
 */
export type GameUpdate = Message<"dwango.nicolive.chat.data.GameUpdate"> & {
};

/**
 * Describes the message dwango.nicolive.chat.data.GameUpdate.
 * Use `create(GameUpdateSchema)` to create a new message.
 */
export const GameUpdateSchema: GenMessage<GameUpdate> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 9);

/**
 * @generated from message dwango.nicolive.chat.data.TrialPanel
 */
export type TrialPanel = Message<"dwango.nicolive.chat.data.TrialPanel"> & {
  /**
   * @generated from field: dwango.nicolive.chat.data.TrialPanel.Panel panel = 1;
   */
  panel: TrialPanel_Panel;

  /**
   * @generated from field: dwango.nicolive.chat.data.TrialPanel.Mode unqualified_user = 2;
   */
  unqualifiedUser: TrialPanel_Mode;
};

/**
 * Describes the message dwango.nicolive.chat.data.TrialPanel.
 * Use `create(TrialPanelSchema)` to create a new message.
 */
export const TrialPanelSchema: GenMessage<TrialPanel> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 10);

/**
 * @generated from enum dwango.nicolive.chat.data.TrialPanel.Panel
 */
export enum TrialPanel_Panel {
  /**
   * @generated from enum value: Hidden = 0;
   */
  Hidden = 0,

  /**
   * @generated from enum value: Display = 1;
   */
  Display = 1,
}

/**
 * Describes the enum dwango.nicolive.chat.data.TrialPanel.Panel.
 */
export const TrialPanel_PanelSchema: GenEnum<TrialPanel_Panel> = /*@__PURE__*/
  enumDesc(file_dwango_nicolive_chat_data_atoms, 10, 0);

/**
 * @generated from enum dwango.nicolive.chat.data.TrialPanel.Mode
 */
export enum TrialPanel_Mode {
  /**
   * @generated from enum value: Allowed = 0;
   */
  Allowed = 0,

  /**
   * @generated from enum value: Restricted = 1;
   */
  Restricted = 1,

  /**
   * @generated from enum value: Forbidden = 2;
   */
  Forbidden = 2,
}

/**
 * Describes the enum dwango.nicolive.chat.data.TrialPanel.Mode.
 */
export const TrialPanel_ModeSchema: GenEnum<TrialPanel_Mode> = /*@__PURE__*/
  enumDesc(file_dwango_nicolive_chat_data_atoms, 10, 1);

/**
 * @generated from message dwango.nicolive.chat.data.ProgramStatus
 */
export type ProgramStatus = Message<"dwango.nicolive.chat.data.ProgramStatus"> & {
  /**
   * @generated from field: dwango.nicolive.chat.data.ProgramStatus.State state = 1;
   */
  state: ProgramStatus_State;
};

/**
 * Describes the message dwango.nicolive.chat.data.ProgramStatus.
 * Use `create(ProgramStatusSchema)` to create a new message.
 */
export const ProgramStatusSchema: GenMessage<ProgramStatus> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 11);

/**
 * @generated from enum dwango.nicolive.chat.data.ProgramStatus.State
 */
export enum ProgramStatus_State {
  /**
   * @generated from enum value: Unknown = 0;
   */
  Unknown = 0,

  /**
   * @generated from enum value: Ended = 1;
   */
  Ended = 1,
}

/**
 * Describes the enum dwango.nicolive.chat.data.ProgramStatus.State.
 */
export const ProgramStatus_StateSchema: GenEnum<ProgramStatus_State> = /*@__PURE__*/
  enumDesc(file_dwango_nicolive_chat_data_atoms, 11, 0);

/**
 * @generated from message dwango.nicolive.chat.data.TagUpdated
 */
export type TagUpdated = Message<"dwango.nicolive.chat.data.TagUpdated"> & {
  /**
   * @generated from field: repeated dwango.nicolive.chat.data.TagUpdated.Tag tags = 1;
   */
  tags: TagUpdated_Tag[];

  /**
   * @generated from field: bool owner_locked = 2;
   */
  ownerLocked: boolean;
};

/**
 * Describes the message dwango.nicolive.chat.data.TagUpdated.
 * Use `create(TagUpdatedSchema)` to create a new message.
 */
export const TagUpdatedSchema: GenMessage<TagUpdated> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 12);

/**
 * @generated from message dwango.nicolive.chat.data.TagUpdated.Tag
 */
export type TagUpdated_Tag = Message<"dwango.nicolive.chat.data.TagUpdated.Tag"> & {
  /**
   * @generated from field: string text = 1;
   */
  text: string;

  /**
   * @generated from field: bool locked = 2;
   */
  locked: boolean;

  /**
   * @generated from field: bool reserved = 3;
   */
  reserved: boolean;

  /**
   * @generated from field: string nicopedia_uri = 4;
   */
  nicopediaUri: string;
};

/**
 * Describes the message dwango.nicolive.chat.data.TagUpdated.Tag.
 * Use `create(TagUpdated_TagSchema)` to create a new message.
 */
export const TagUpdated_TagSchema: GenMessage<TagUpdated_Tag> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 12, 0);

/**
 * @generated from message dwango.nicolive.chat.data.Statistics
 */
export type Statistics = Message<"dwango.nicolive.chat.data.Statistics"> & {
  /**
   * @generated from field: optional int64 viewers = 1;
   */
  viewers?: bigint;

  /**
   * @generated from field: optional int64 comments = 2;
   */
  comments?: bigint;

  /**
   * @generated from field: optional int64 ad_points = 3;
   */
  adPoints?: bigint;

  /**
   * @generated from field: optional int64 gift_points = 4;
   */
  giftPoints?: bigint;
};

/**
 * Describes the message dwango.nicolive.chat.data.Statistics.
 * Use `create(StatisticsSchema)` to create a new message.
 */
export const StatisticsSchema: GenMessage<Statistics> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 13);

/**
 * @generated from message dwango.nicolive.chat.data.Marquee
 */
export type Marquee = Message<"dwango.nicolive.chat.data.Marquee"> & {
  /**
   * @generated from field: optional dwango.nicolive.chat.data.Marquee.Display display = 1;
   */
  display?: Marquee_Display;
};

/**
 * Describes the message dwango.nicolive.chat.data.Marquee.
 * Use `create(MarqueeSchema)` to create a new message.
 */
export const MarqueeSchema: GenMessage<Marquee> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 14);

/**
 * @generated from message dwango.nicolive.chat.data.Marquee.Display
 */
export type Marquee_Display = Message<"dwango.nicolive.chat.data.Marquee.Display"> & {
  /**
   * @generated from field: dwango.nicolive.chat.data.OperatorComment operator_comment = 1;
   */
  operatorComment?: OperatorComment;

  /**
   * @generated from field: optional google.protobuf.Duration duration = 3;
   */
  duration?: Duration;
};

/**
 * Describes the message dwango.nicolive.chat.data.Marquee.Display.
 * Use `create(Marquee_DisplaySchema)` to create a new message.
 */
export const Marquee_DisplaySchema: GenMessage<Marquee_Display> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 14, 0);

/**
 * @generated from message dwango.nicolive.chat.data.Enquete
 */
export type Enquete = Message<"dwango.nicolive.chat.data.Enquete"> & {
  /**
   * @generated from field: string question = 1;
   */
  question: string;

  /**
   * @generated from field: repeated dwango.nicolive.chat.data.Enquete.Choice choices = 2;
   */
  choices: Enquete_Choice[];

  /**
   * @generated from field: dwango.nicolive.chat.data.Enquete.Status status = 3;
   */
  status: Enquete_Status;
};

/**
 * Describes the message dwango.nicolive.chat.data.Enquete.
 * Use `create(EnqueteSchema)` to create a new message.
 */
export const EnqueteSchema: GenMessage<Enquete> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 15);

/**
 * @generated from message dwango.nicolive.chat.data.Enquete.Choice
 */
export type Enquete_Choice = Message<"dwango.nicolive.chat.data.Enquete.Choice"> & {
  /**
   * @generated from field: string description = 1;
   */
  description: string;

  /**
   * @generated from field: optional int32 per_mille = 3;
   */
  perMille?: number;
};

/**
 * Describes the message dwango.nicolive.chat.data.Enquete.Choice.
 * Use `create(Enquete_ChoiceSchema)` to create a new message.
 */
export const Enquete_ChoiceSchema: GenMessage<Enquete_Choice> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 15, 0);

/**
 * @generated from enum dwango.nicolive.chat.data.Enquete.Status
 */
export enum Enquete_Status {
  /**
   * @generated from enum value: Closed = 0;
   */
  Closed = 0,

  /**
   * @generated from enum value: Poll = 1;
   */
  Poll = 1,

  /**
   * @generated from enum value: Result = 2;
   */
  Result = 2,
}

/**
 * Describes the enum dwango.nicolive.chat.data.Enquete.Status.
 */
export const Enquete_StatusSchema: GenEnum<Enquete_Status> = /*@__PURE__*/
  enumDesc(file_dwango_nicolive_chat_data_atoms, 15, 0);

/**
 * @generated from message dwango.nicolive.chat.data.MoveOrder
 */
export type MoveOrder = Message<"dwango.nicolive.chat.data.MoveOrder"> & {
  /**
   * @generated from oneof dwango.nicolive.chat.data.MoveOrder.to
   */
  to: {
    /**
     * @generated from field: dwango.nicolive.chat.data.Jump jump = 1;
     */
    value: Jump;
    case: "jump";
  } | {
    /**
     * @generated from field: dwango.nicolive.chat.data.Redirect redirect = 2;
     */
    value: Redirect;
    case: "redirect";
  } | { case: undefined; value?: undefined };
};

/**
 * Describes the message dwango.nicolive.chat.data.MoveOrder.
 * Use `create(MoveOrderSchema)` to create a new message.
 */
export const MoveOrderSchema: GenMessage<MoveOrder> = /*@__PURE__*/
  messageDesc(file_dwango_nicolive_chat_data_atoms, 16);

